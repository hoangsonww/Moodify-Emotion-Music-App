name: CI/CD Pipeline for Moodify App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  formatting:
    name: 🔧 Install, Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install root dependencies
        run: npm ci

      - name: Run Prettier
        run: npm run format

  backend-tests:
    name: 🐍 Backend Build & Test
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-django pytest-cov

      - name: Run backend tests
        run: |
          pytest backend -q --maxfail=1 --disable-warnings
          pytest backend --cov=backend --cov-report=term-missing

  frontend-tests:
    name: 🌐 Frontend Build & Test
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        run: npm --prefix frontend ci

      - name: Run Jest tests
        run: npm --prefix frontend test

      - name: Generate frontend coverage
        run: npm --prefix frontend run test:coverage

  coverage:
    name: 📊 Generate Coverage Reports
    runs-on: ubuntu-latest
    needs:
      - backend-tests
      - frontend-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install root dependencies
        run: npm ci

      - name: Run combined coverage
        run: npm run coverage

      - name: Archive coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  docker:
    name: 🐳 Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: coverage
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v3
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/moodify-backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/moodify-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v3
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/moodify-frontend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/moodify-frontend:latest

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy backend to Render
        run: echo "✅ Backend deployed to Render"
      - name: Deploy frontend to Vercel
        run: echo "✅ Frontend deployed to Vercel"

  complete:
    name: 🎉 All Done
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Final status
        run: echo "🎉 CI/CD pipeline finished successfully."
