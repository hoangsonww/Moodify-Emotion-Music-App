name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: üêç Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        working-directory: backend
        env:
          DJANGO_SETTINGS_MODULE: backend.settings
        run: |
          source venv/bin/activate
          python manage.py migrate --noinput

      - name: Run Django tests
        working-directory: backend
        env:
          DJANGO_SETTINGS_MODULE: backend.settings
        run: |
          source venv/bin/activate
          python manage.py test

  frontend:
    name: ‚öõÔ∏è Frontend Tests
    runs-on: ubuntu-latest
    needs: backend
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run React tests
        working-directory: frontend
        run: npm test -- --watchAll=false

  lint:
    name: üîç Lint & Type-check
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Python lint (flake8)
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - run: |
          python -m pip install flake8
          flake8 backend

      - name: JavaScript lint (ESLint)
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          cd frontend
          npm ci
          npm run lint
